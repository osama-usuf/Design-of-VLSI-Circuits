// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_HH_
#define _relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s : public sc_module {
    // Port declarations 21
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > data_0_V_read;
    sc_in< sc_lv<16> > data_1_V_read;
    sc_in< sc_lv<16> > data_2_V_read;
    sc_in< sc_lv<16> > data_3_V_read;
    sc_in< sc_lv<16> > data_4_V_read;
    sc_in< sc_lv<16> > data_5_V_read;
    sc_in< sc_lv<16> > data_6_V_read;
    sc_in< sc_lv<16> > data_7_V_read;
    sc_in< sc_lv<16> > data_8_V_read;
    sc_in< sc_lv<16> > data_9_V_read;
    sc_out< sc_lv<16> > ap_return_0;
    sc_out< sc_lv<16> > ap_return_1;
    sc_out< sc_lv<16> > ap_return_2;
    sc_out< sc_lv<16> > ap_return_3;
    sc_out< sc_lv<16> > ap_return_4;
    sc_out< sc_lv<16> > ap_return_5;
    sc_out< sc_lv<16> > ap_return_6;
    sc_out< sc_lv<16> > ap_return_7;
    sc_out< sc_lv<16> > ap_return_8;
    sc_out< sc_lv<16> > ap_return_9;


    // Module declarations
    relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s(sc_module_name name);
    SC_HAS_PROCESS(relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s);

    ~relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<1> > icmp_ln1494_fu_104_p2;
    sc_signal< sc_lv<15> > trunc_ln81_fu_110_p1;
    sc_signal< sc_lv<15> > select_ln81_fu_114_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_1_fu_126_p2;
    sc_signal< sc_lv<15> > trunc_ln81_1_fu_132_p1;
    sc_signal< sc_lv<15> > select_ln81_1_fu_136_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_2_fu_148_p2;
    sc_signal< sc_lv<15> > trunc_ln81_2_fu_154_p1;
    sc_signal< sc_lv<15> > select_ln81_2_fu_158_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_3_fu_170_p2;
    sc_signal< sc_lv<15> > trunc_ln81_3_fu_176_p1;
    sc_signal< sc_lv<15> > select_ln81_3_fu_180_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_4_fu_192_p2;
    sc_signal< sc_lv<15> > trunc_ln81_4_fu_198_p1;
    sc_signal< sc_lv<15> > select_ln81_4_fu_202_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_5_fu_214_p2;
    sc_signal< sc_lv<15> > trunc_ln81_5_fu_220_p1;
    sc_signal< sc_lv<15> > select_ln81_5_fu_224_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_6_fu_236_p2;
    sc_signal< sc_lv<15> > trunc_ln81_6_fu_242_p1;
    sc_signal< sc_lv<15> > select_ln81_6_fu_246_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_7_fu_258_p2;
    sc_signal< sc_lv<15> > trunc_ln81_7_fu_264_p1;
    sc_signal< sc_lv<15> > select_ln81_7_fu_268_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_8_fu_280_p2;
    sc_signal< sc_lv<15> > trunc_ln81_8_fu_286_p1;
    sc_signal< sc_lv<15> > select_ln81_8_fu_290_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_9_fu_302_p2;
    sc_signal< sc_lv<15> > trunc_ln81_9_fu_308_p1;
    sc_signal< sc_lv<15> > select_ln81_9_fu_312_p3;
    sc_signal< sc_lv<16> > zext_ln81_fu_122_p1;
    sc_signal< sc_lv<16> > zext_ln81_1_fu_144_p1;
    sc_signal< sc_lv<16> > zext_ln81_2_fu_166_p1;
    sc_signal< sc_lv<16> > zext_ln81_3_fu_188_p1;
    sc_signal< sc_lv<16> > zext_ln81_4_fu_210_p1;
    sc_signal< sc_lv<16> > zext_ln81_5_fu_232_p1;
    sc_signal< sc_lv<16> > zext_ln81_6_fu_254_p1;
    sc_signal< sc_lv<16> > zext_ln81_7_fu_276_p1;
    sc_signal< sc_lv<16> > zext_ln81_8_fu_298_p1;
    sc_signal< sc_lv<16> > zext_ln81_9_fu_320_p1;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_ap_return_4();
    void thread_ap_return_5();
    void thread_ap_return_6();
    void thread_ap_return_7();
    void thread_ap_return_8();
    void thread_ap_return_9();
    void thread_icmp_ln1494_1_fu_126_p2();
    void thread_icmp_ln1494_2_fu_148_p2();
    void thread_icmp_ln1494_3_fu_170_p2();
    void thread_icmp_ln1494_4_fu_192_p2();
    void thread_icmp_ln1494_5_fu_214_p2();
    void thread_icmp_ln1494_6_fu_236_p2();
    void thread_icmp_ln1494_7_fu_258_p2();
    void thread_icmp_ln1494_8_fu_280_p2();
    void thread_icmp_ln1494_9_fu_302_p2();
    void thread_icmp_ln1494_fu_104_p2();
    void thread_select_ln81_1_fu_136_p3();
    void thread_select_ln81_2_fu_158_p3();
    void thread_select_ln81_3_fu_180_p3();
    void thread_select_ln81_4_fu_202_p3();
    void thread_select_ln81_5_fu_224_p3();
    void thread_select_ln81_6_fu_246_p3();
    void thread_select_ln81_7_fu_268_p3();
    void thread_select_ln81_8_fu_290_p3();
    void thread_select_ln81_9_fu_312_p3();
    void thread_select_ln81_fu_114_p3();
    void thread_trunc_ln81_1_fu_132_p1();
    void thread_trunc_ln81_2_fu_154_p1();
    void thread_trunc_ln81_3_fu_176_p1();
    void thread_trunc_ln81_4_fu_198_p1();
    void thread_trunc_ln81_5_fu_220_p1();
    void thread_trunc_ln81_6_fu_242_p1();
    void thread_trunc_ln81_7_fu_264_p1();
    void thread_trunc_ln81_8_fu_286_p1();
    void thread_trunc_ln81_9_fu_308_p1();
    void thread_trunc_ln81_fu_110_p1();
    void thread_zext_ln81_1_fu_144_p1();
    void thread_zext_ln81_2_fu_166_p1();
    void thread_zext_ln81_3_fu_188_p1();
    void thread_zext_ln81_4_fu_210_p1();
    void thread_zext_ln81_5_fu_232_p1();
    void thread_zext_ln81_6_fu_254_p1();
    void thread_zext_ln81_7_fu_276_p1();
    void thread_zext_ln81_8_fu_298_p1();
    void thread_zext_ln81_9_fu_320_p1();
    void thread_zext_ln81_fu_122_p1();
};

}

using namespace ap_rtl;

#endif
