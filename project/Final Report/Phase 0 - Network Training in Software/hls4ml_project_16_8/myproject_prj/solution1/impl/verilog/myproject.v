// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input1_V_ap_vld,
        input1_V,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        input1_V_blk_n
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   input1_V_ap_vld;
input  [5183:0] input1_V;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;
output  [15:0] ap_return_8;
output  [15:0] ap_return_9;
output   input1_V_blk_n;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input1_V_blk_n;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
reg    ap_block_pp0_stage0_11001;
reg   [15:0] layer2_out_0_V_reg_149;
reg   [15:0] layer2_out_1_V_reg_154;
reg   [15:0] layer2_out_2_V_reg_159;
reg   [15:0] layer2_out_3_V_reg_164;
reg   [15:0] layer2_out_4_V_reg_169;
reg   [15:0] layer2_out_5_V_reg_174;
reg   [15:0] layer2_out_6_V_reg_179;
reg   [15:0] layer2_out_7_V_reg_184;
reg   [15:0] layer2_out_8_V_reg_189;
reg   [15:0] layer2_out_9_V_reg_194;
reg   [15:0] layer3_out_0_V_reg_199;
reg   [15:0] layer3_out_1_V_reg_204;
reg   [15:0] layer3_out_2_V_reg_209;
reg   [15:0] layer3_out_3_V_reg_214;
reg   [15:0] layer3_out_4_V_reg_219;
reg   [15:0] layer3_out_5_V_reg_224;
reg   [15:0] layer3_out_6_V_reg_229;
reg   [15:0] layer3_out_7_V_reg_234;
reg   [15:0] layer3_out_8_V_reg_239;
reg   [15:0] layer3_out_9_V_reg_244;
reg    ap_block_pp0_stage0_subdone;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_0;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_1;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_2;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_3;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_4;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_5;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_6;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_7;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_8;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_9;
reg    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call4;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call4;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call4;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call4;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call4;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call4;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call4;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call4;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call4;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call4;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call4;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call4;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call4;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call4;
wire    ap_block_state15_pp0_stage0_iter14_ignore_call4;
wire    ap_block_state16_pp0_stage0_iter15_ignore_call4;
wire    ap_block_state17_pp0_stage0_iter16_ignore_call4;
reg    ap_block_pp0_stage0_11001_ignoreCallOp19;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_0;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_1;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_2;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_3;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_4;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_5;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_6;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_7;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_8;
wire   [15:0] grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_9;
reg    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call26;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call26;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call26;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call26;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call26;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call26;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call26;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call26;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call26;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call26;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call26;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call26;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call26;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call26;
wire    ap_block_state15_pp0_stage0_iter14_ignore_call26;
wire    ap_block_state16_pp0_stage0_iter15_ignore_call26;
wire    ap_block_state17_pp0_stage0_iter16_ignore_call26;
reg    ap_block_pp0_stage0_11001_ignoreCallOp50;
wire    call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_ready;
wire   [15:0] call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_0;
wire   [15:0] call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_1;
wire   [15:0] call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_2;
wire   [15:0] call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_3;
wire   [15:0] call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_4;
wire   [15:0] call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_5;
wire   [15:0] call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_6;
wire   [15:0] call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_7;
wire   [15:0] call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_8;
wire   [15:0] call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_9;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to15;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
end

dense_latency_0_0_0_0_0_0_0_0_0_0_0_1 grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_V_read(input1_V),
    .ap_return_0(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_0),
    .ap_return_1(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_1),
    .ap_return_2(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_2),
    .ap_return_3(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_3),
    .ap_return_4(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_4),
    .ap_return_5(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_5),
    .ap_return_6(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_6),
    .ap_return_7(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_7),
    .ap_return_8(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_8),
    .ap_return_9(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_9),
    .ap_ce(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_ce)
);

dense_latency_0_0_0_0_0_0_0_0_0_0_0 grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_0_V_read(layer3_out_0_V_reg_199),
    .data_1_V_read(layer3_out_1_V_reg_204),
    .data_2_V_read(layer3_out_2_V_reg_209),
    .data_3_V_read(layer3_out_3_V_reg_214),
    .data_4_V_read(layer3_out_4_V_reg_219),
    .data_5_V_read(layer3_out_5_V_reg_224),
    .data_6_V_read(layer3_out_6_V_reg_229),
    .data_7_V_read(layer3_out_7_V_reg_234),
    .data_8_V_read(layer3_out_8_V_reg_239),
    .data_9_V_read(layer3_out_9_V_reg_244),
    .ap_return_0(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_0),
    .ap_return_1(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_1),
    .ap_return_2(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_2),
    .ap_return_3(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_3),
    .ap_return_4(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_4),
    .ap_return_5(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_5),
    .ap_return_6(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_6),
    .ap_return_7(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_7),
    .ap_return_8(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_8),
    .ap_return_9(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_9),
    .ap_ce(grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_ce)
);

relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50(
    .ap_ready(call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_ready),
    .data_0_V_read(layer2_out_0_V_reg_149),
    .data_1_V_read(layer2_out_1_V_reg_154),
    .data_2_V_read(layer2_out_2_V_reg_159),
    .data_3_V_read(layer2_out_3_V_reg_164),
    .data_4_V_read(layer2_out_4_V_reg_169),
    .data_5_V_read(layer2_out_5_V_reg_174),
    .data_6_V_read(layer2_out_6_V_reg_179),
    .data_7_V_read(layer2_out_7_V_reg_184),
    .data_8_V_read(layer2_out_8_V_reg_189),
    .data_9_V_read(layer2_out_9_V_reg_194),
    .ap_return_0(call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_0),
    .ap_return_1(call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_1),
    .ap_return_2(call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_2),
    .ap_return_3(call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_3),
    .ap_return_4(call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_4),
    .ap_return_5(call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_5),
    .ap_return_6(call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_6),
    .ap_return_7(call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_7),
    .ap_return_8(call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_8),
    .ap_return_9(call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_9)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        layer2_out_0_V_reg_149 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_0;
        layer2_out_1_V_reg_154 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_1;
        layer2_out_2_V_reg_159 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_2;
        layer2_out_3_V_reg_164 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_3;
        layer2_out_4_V_reg_169 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_4;
        layer2_out_5_V_reg_174 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_5;
        layer2_out_6_V_reg_179 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_6;
        layer2_out_7_V_reg_184 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_7;
        layer2_out_8_V_reg_189 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_8;
        layer2_out_9_V_reg_194 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_return_9;
        layer3_out_0_V_reg_199 <= call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_0;
        layer3_out_1_V_reg_204 <= call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_1;
        layer3_out_2_V_reg_209 <= call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_2;
        layer3_out_3_V_reg_214 <= call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_3;
        layer3_out_4_V_reg_219 <= call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_4;
        layer3_out_5_V_reg_224 <= call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_5;
        layer3_out_6_V_reg_229 <= call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_6;
        layer3_out_7_V_reg_234 <= call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_7;
        layer3_out_8_V_reg_239 <= call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_8;
        layer3_out_9_V_reg_244 <= call_ret1_relu_ap_fixed_ap_fixed_16_8_5_3_0_ReLU_config3_s_fu_50_ap_return_9;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to15 = 1'b1;
    end else begin
        ap_idle_pp0_0to15 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to15 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp19) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_ce = 1'b1;
    end else begin
        grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_1_fu_30_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp50) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_ce = 1'b1;
    end else begin
        grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input1_V_blk_n = input1_V_ap_vld;
    end else begin
        input1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b1) & ((input1_V_ap_vld == 1'b0) | (ap_start == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp19 = ((ap_start == 1'b1) & ((input1_V_ap_vld == 1'b0) | (ap_start == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp50 = ((ap_start == 1'b1) & ((input1_V_ap_vld == 1'b0) | (ap_start == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b1) & ((input1_V_ap_vld == 1'b0) | (ap_start == 1'b0)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call4 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call4 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14_ignore_call4 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15_ignore_call4 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16_ignore_call4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((input1_V_ap_vld == 1'b0) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call26 = ((input1_V_ap_vld == 1'b0) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call4 = ((input1_V_ap_vld == 1'b0) | (ap_start == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call4 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call4 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call4 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call26 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return_0 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_0;

assign ap_return_1 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_1;

assign ap_return_2 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_2;

assign ap_return_3 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_3;

assign ap_return_4 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_4;

assign ap_return_5 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_5;

assign ap_return_6 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_6;

assign ap_return_7 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_7;

assign ap_return_8 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_8;

assign ap_return_9 = grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_fu_36_ap_return_9;

endmodule //myproject
