

================================================================
== Vivado HLS Report for 'myproject_axi'
================================================================
* Date:           Sun Oct 23 21:51:08 2022

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        myproject_prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z045-ffg900-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   5.00|     4.326|        0.62|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  364|  364|  364|  364|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |  329|  329|         7|          1|          1|   324|    yes   |
        |- Loop 2  |   15|   15|         7|          1|          1|    10|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 7
  * Pipeline-1: initiation interval (II) = 1, depth = 7


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 33
* Pipeline : 2
  Pipeline-0 : II = 1, D = 7, States = { 2 3 4 5 6 7 8 }
  Pipeline-1 : II = 1, D = 7, States = { 26 27 28 29 30 31 32 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 9 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 2 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 33 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 26 
33 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.46>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float* %in_data), !map !118"   --->   Operation 34 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %in_last_V), !map !124"   --->   Operation 35 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float* %out_data), !map !128"   --->   Operation 36 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %out_last_V), !map !134"   --->   Operation 37 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([14 x i8]* @myproject_axi_str) nounwind"   --->   Operation 38 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%in_local_V = alloca i5184, align 8" [firmware/myproject_axi.cpp:16]   --->   Operation 39 'alloca' 'in_local_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(float* %in_data, i1* %in_last_V, [5 x i8]* @p_str4, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2)" [firmware/myproject_axi.cpp:8]   --->   Operation 40 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(float* %out_data, i1* %out_last_V, [5 x i8]* @p_str4, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2)" [firmware/myproject_axi.cpp:9]   --->   Operation 41 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [firmware/myproject_axi.cpp:10]   --->   Operation 42 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.46ns)   --->   "br label %.preheader" [firmware/myproject_axi.cpp:19]   --->   Operation 43 'br' <Predicate = true> <Delay = 0.46>

State 2 <SV = 1> <Delay = 3.15>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%is_last_0 = phi i1 [ %is_last, %hls_label_0 ], [ false, %arrayctor.loop1.preheader ]"   --->   Operation 44 'phi' 'is_last_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%i_0 = phi i9 [ %i, %hls_label_0 ], [ 0, %arrayctor.loop1.preheader ]"   --->   Operation 45 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (1.62ns)   --->   "%icmp_ln19 = icmp eq i9 %i_0, -188" [firmware/myproject_axi.cpp:19]   --->   Operation 46 'icmp' 'icmp_ln19' <Predicate = true> <Delay = 1.62> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 324, i64 324, i64 324)"   --->   Operation 47 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (1.36ns)   --->   "%i = add i9 %i_0, 1" [firmware/myproject_axi.cpp:19]   --->   Operation 48 'add' 'i' <Predicate = true> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.69> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "br i1 %icmp_ln19, label %0, label %hls_label_0" [firmware/myproject_axi.cpp:19]   --->   Operation 49 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%empty_33 = call { float, i1 } @_ssdm_op_Read.axis.volatile.floatP.i1P(float* %in_data, i1* %in_last_V)" [firmware/myproject_axi.cpp:4]   --->   Operation 50 'read' 'empty_33' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%in_data_tmp = extractvalue { float, i1 } %empty_33, 0" [firmware/myproject_axi.cpp:4]   --->   Operation 51 'extractvalue' 'in_data_tmp' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node is_last)   --->   "%in_last_V_tmp = extractvalue { float, i1 } %empty_33, 1" [firmware/myproject_axi.cpp:4]   --->   Operation 52 'extractvalue' 'in_last_V_tmp' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_2 : Operation 53 [2/2] (3.15ns)   --->   "%d_assign = fpext float %in_data_tmp to double" [firmware/myproject_axi.cpp:21]   --->   Operation 53 'fpext' 'd_assign' <Predicate = (!icmp_ln19)> <Delay = 3.15> <Core = "Float2Double">   --->   Core 114 'Float2Double' <Latency = 1> <II = 1> <Delay = 3.15> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.80ns) (out node of the LUT)   --->   "%is_last = or i1 %in_last_V_tmp, %is_last_0" [firmware/myproject_axi.cpp:22]   --->   Operation 54 'or' 'is_last' <Predicate = (!icmp_ln19)> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 3.15>
ST_3 : Operation 55 [1/2] (3.15ns)   --->   "%d_assign = fpext float %in_data_tmp to double" [firmware/myproject_axi.cpp:21]   --->   Operation 55 'fpext' 'd_assign' <Predicate = (!icmp_ln19)> <Delay = 3.15> <Core = "Float2Double">   --->   Core 114 'Float2Double' <Latency = 1> <II = 1> <Delay = 3.15> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%ireg_V = bitcast double %d_assign to i64" [firmware/myproject_axi.cpp:21]   --->   Operation 56 'bitcast' 'ireg_V' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "%trunc_ln556 = trunc i64 %ireg_V to i63" [firmware/myproject_axi.cpp:21]   --->   Operation 57 'trunc' 'trunc_ln556' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%p_Result_8 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V, i32 63)" [firmware/myproject_axi.cpp:21]   --->   Operation 58 'bitselect' 'p_Result_8' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%exp_tmp_V = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V, i32 52, i32 62)" [firmware/myproject_axi.cpp:21]   --->   Operation 59 'partselect' 'exp_tmp_V' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%trunc_ln565 = trunc i64 %ireg_V to i52" [firmware/myproject_axi.cpp:21]   --->   Operation 60 'trunc' 'trunc_ln565' <Predicate = (!icmp_ln19)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 3.95>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln461 = zext i11 %exp_tmp_V to i12" [firmware/myproject_axi.cpp:21]   --->   Operation 61 'zext' 'zext_ln461' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (2.26ns)   --->   "%icmp_ln571 = icmp eq i63 %trunc_ln556, 0" [firmware/myproject_axi.cpp:21]   --->   Operation 62 'icmp' 'icmp_ln571' <Predicate = (!icmp_ln19)> <Delay = 2.26> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 63 [1/1] (1.54ns)   --->   "%F2 = sub i12 1075, %zext_ln461" [firmware/myproject_axi.cpp:21]   --->   Operation 63 'sub' 'F2' <Predicate = (!icmp_ln19)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.69> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 64 [1/1] (1.82ns)   --->   "%icmp_ln581 = icmp sgt i12 %F2, 8" [firmware/myproject_axi.cpp:21]   --->   Operation 64 'icmp' 'icmp_ln581' <Predicate = (!icmp_ln19)> <Delay = 1.82> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 65 [1/1] (1.54ns)   --->   "%add_ln581 = add i12 -8, %F2" [firmware/myproject_axi.cpp:21]   --->   Operation 65 'add' 'add_ln581' <Predicate = (!icmp_ln19)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.69> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 66 [1/1] (1.54ns)   --->   "%sub_ln581 = sub i12 8, %F2" [firmware/myproject_axi.cpp:21]   --->   Operation 66 'sub' 'sub_ln581' <Predicate = (!icmp_ln19)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.69> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 67 [1/1] (0.59ns)   --->   "%sh_amt = select i1 %icmp_ln581, i12 %add_ln581, i12 %sub_ln581" [firmware/myproject_axi.cpp:21]   --->   Operation 67 'select' 'sh_amt' <Predicate = (!icmp_ln19)> <Delay = 0.59> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 68 [1/1] (1.82ns)   --->   "%icmp_ln582 = icmp eq i12 %F2, 8" [firmware/myproject_axi.cpp:21]   --->   Operation 68 'icmp' 'icmp_ln582' <Predicate = (!icmp_ln19)> <Delay = 1.82> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%tmp_4 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %sh_amt, i32 4, i32 11)" [firmware/myproject_axi.cpp:21]   --->   Operation 69 'partselect' 'tmp_4' <Predicate = (!icmp_ln19)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 4.09>
ST_5 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_s = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %trunc_ln565)" [firmware/myproject_axi.cpp:21]   --->   Operation 70 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_5 : Operation 71 [1/1] (0.00ns)   --->   "%p_Result_9 = zext i53 %tmp_s to i54" [firmware/myproject_axi.cpp:21]   --->   Operation 71 'zext' 'p_Result_9' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_5 : Operation 72 [1/1] (2.41ns)   --->   "%man_V_1 = sub i54 0, %p_Result_9" [firmware/myproject_axi.cpp:21]   --->   Operation 72 'sub' 'man_V_1' <Predicate = (!icmp_ln19 & p_Result_8)> <Delay = 2.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.69> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 73 [1/1] (0.86ns)   --->   "%man_V_2 = select i1 %p_Result_8, i54 %man_V_1, i54 %p_Result_9" [firmware/myproject_axi.cpp:21]   --->   Operation 73 'select' 'man_V_2' <Predicate = (!icmp_ln19)> <Delay = 0.86> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 74 [1/1] (0.00ns)   --->   "%trunc_ln583 = trunc i54 %man_V_2 to i16" [firmware/myproject_axi.cpp:21]   --->   Operation 74 'trunc' 'trunc_ln583' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_5 : Operation 75 [1/1] (1.82ns)   --->   "%icmp_ln585 = icmp ult i12 %sh_amt, 54" [firmware/myproject_axi.cpp:21]   --->   Operation 75 'icmp' 'icmp_ln585' <Predicate = (!icmp_ln19)> <Delay = 1.82> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 76 [1/1] (1.31ns)   --->   "%icmp_ln603 = icmp eq i8 %tmp_4, 0" [firmware/myproject_axi.cpp:21]   --->   Operation 76 'icmp' 'icmp_ln603' <Predicate = (!icmp_ln19)> <Delay = 1.31> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_1)   --->   "%bitcast_ln696 = bitcast float %in_data_tmp to i32" [firmware/myproject_axi.cpp:21]   --->   Operation 77 'bitcast' 'bitcast_ln696' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_5 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_1)   --->   "%tmp_5 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %bitcast_ln696, i32 31)" [firmware/myproject_axi.cpp:21]   --->   Operation 78 'bitselect' 'tmp_5' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_5 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_1)   --->   "%select_ln588 = select i1 %tmp_5, i16 -1, i16 0" [firmware/myproject_axi.cpp:21]   --->   Operation 79 'select' 'select_ln588' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node or_ln603_2)   --->   "%xor_ln571 = xor i1 %icmp_ln571, true" [firmware/myproject_axi.cpp:21]   --->   Operation 80 'xor' 'xor_ln571' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node or_ln603_2)   --->   "%and_ln582 = and i1 %icmp_ln582, %xor_ln571" [firmware/myproject_axi.cpp:21]   --->   Operation 81 'and' 'and_ln582' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 82 [1/1] (0.80ns)   --->   "%or_ln582 = or i1 %icmp_ln571, %icmp_ln582" [firmware/myproject_axi.cpp:21]   --->   Operation 82 'or' 'or_ln582' <Predicate = (!icmp_ln19)> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node and_ln581)   --->   "%xor_ln582 = xor i1 %or_ln582, true" [firmware/myproject_axi.cpp:21]   --->   Operation 83 'xor' 'xor_ln582' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 84 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln581 = and i1 %icmp_ln581, %xor_ln582" [firmware/myproject_axi.cpp:21]   --->   Operation 84 'and' 'and_ln581' <Predicate = (!icmp_ln19)> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node and_ln585)   --->   "%xor_ln585 = xor i1 %icmp_ln585, true" [firmware/myproject_axi.cpp:21]   --->   Operation 85 'xor' 'xor_ln585' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 86 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln585 = and i1 %and_ln581, %xor_ln585" [firmware/myproject_axi.cpp:21]   --->   Operation 86 'and' 'and_ln585' <Predicate = (!icmp_ln19)> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node or_ln603)   --->   "%and_ln585_1 = and i1 %and_ln581, %icmp_ln585" [firmware/myproject_axi.cpp:21]   --->   Operation 87 'and' 'and_ln585_1' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node and_ln603)   --->   "%or_ln581 = or i1 %or_ln582, %icmp_ln581" [firmware/myproject_axi.cpp:21]   --->   Operation 88 'or' 'or_ln581' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node and_ln603)   --->   "%xor_ln581 = xor i1 %or_ln581, true" [firmware/myproject_axi.cpp:21]   --->   Operation 89 'xor' 'xor_ln581' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 90 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln603 = and i1 %icmp_ln603, %xor_ln581" [firmware/myproject_axi.cpp:21]   --->   Operation 90 'and' 'and_ln603' <Predicate = (!icmp_ln19)> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 91 [1/1] (0.80ns) (out node of the LUT)   --->   "%or_ln603 = or i1 %and_ln603, %and_ln585_1" [firmware/myproject_axi.cpp:21]   --->   Operation 91 'or' 'or_ln603' <Predicate = (!icmp_ln19)> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 92 [1/1] (0.81ns) (out node of the LUT)   --->   "%select_ln603_1 = select i1 %and_ln585, i16 %select_ln588, i16 %trunc_ln583" [firmware/myproject_axi.cpp:21]   --->   Operation 92 'select' 'select_ln603_1' <Predicate = (!icmp_ln19)> <Delay = 0.81> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node or_ln603_2)   --->   "%or_ln603_1 = or i1 %and_ln585, %and_ln582" [firmware/myproject_axi.cpp:21]   --->   Operation 93 'or' 'or_ln603_1' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 94 [1/1] (0.80ns) (out node of the LUT)   --->   "%or_ln603_2 = or i1 %or_ln603, %or_ln603_1" [firmware/myproject_axi.cpp:21]   --->   Operation 94 'or' 'or_ln603_2' <Predicate = (!icmp_ln19)> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 95 [1/1] (0.00ns)   --->   "%shl_ln = call i13 @_ssdm_op_BitConcatenate.i13.i9.i4(i9 %i_0, i4 0)" [firmware/myproject_axi.cpp:21]   --->   Operation 95 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln19)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 4.19>
ST_6 : Operation 96 [1/1] (0.00ns)   --->   "%sext_ln581 = sext i12 %sh_amt to i32" [firmware/myproject_axi.cpp:21]   --->   Operation 96 'sext' 'sext_ln581' <Predicate = (!icmp_ln19 & or_ln603 & or_ln603_2)> <Delay = 0.00>
ST_6 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node select_ln603)   --->   "%zext_ln586 = zext i32 %sext_ln581 to i54" [firmware/myproject_axi.cpp:21]   --->   Operation 97 'zext' 'zext_ln586' <Predicate = (!icmp_ln19 & !and_ln603 & or_ln603 & or_ln603_2)> <Delay = 0.00>
ST_6 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node select_ln603)   --->   "%ashr_ln586 = ashr i54 %man_V_2, %zext_ln586" [firmware/myproject_axi.cpp:21]   --->   Operation 98 'ashr' 'ashr_ln586' <Predicate = (!icmp_ln19 & !and_ln603 & or_ln603 & or_ln603_2)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node select_ln603)   --->   "%trunc_ln586 = trunc i54 %ashr_ln586 to i16" [firmware/myproject_axi.cpp:21]   --->   Operation 99 'trunc' 'trunc_ln586' <Predicate = (!icmp_ln19 & !and_ln603 & or_ln603 & or_ln603_2)> <Delay = 0.00>
ST_6 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node select_ln603)   --->   "%sext_ln581cast = trunc i32 %sext_ln581 to i16" [firmware/myproject_axi.cpp:21]   --->   Operation 100 'trunc' 'sext_ln581cast' <Predicate = (!icmp_ln19 & and_ln603 & or_ln603 & or_ln603_2)> <Delay = 0.00>
ST_6 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node select_ln603)   --->   "%shl_ln604 = shl i16 %trunc_ln583, %sext_ln581cast" [firmware/myproject_axi.cpp:21]   --->   Operation 101 'shl' 'shl_ln604' <Predicate = (!icmp_ln19 & and_ln603 & or_ln603 & or_ln603_2)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 102 [1/1] (3.56ns) (out node of the LUT)   --->   "%select_ln603 = select i1 %and_ln603, i16 %shl_ln604, i16 %trunc_ln586" [firmware/myproject_axi.cpp:21]   --->   Operation 102 'select' 'select_ln603' <Predicate = (!icmp_ln19 & or_ln603 & or_ln603_2)> <Delay = 3.56> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node select_ln603_3)   --->   "%select_ln603_2 = select i1 %or_ln603, i16 %select_ln603, i16 %select_ln603_1" [firmware/myproject_axi.cpp:21]   --->   Operation 103 'select' 'select_ln603_2' <Predicate = (!icmp_ln19 & or_ln603_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 104 [1/1] (0.62ns) (out node of the LUT)   --->   "%select_ln603_3 = select i1 %or_ln603_2, i16 %select_ln603_2, i16 0" [firmware/myproject_axi.cpp:21]   --->   Operation 104 'select' 'select_ln603_3' <Predicate = (!icmp_ln19)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 105 [1/1] (0.00ns)   --->   "%empty_34 = or i13 %shl_ln, 15" [firmware/myproject_axi.cpp:21]   --->   Operation 105 'or' 'empty_34' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_6 : Operation 106 [1/1] (1.90ns)   --->   "%icmp_ln203 = icmp ugt i13 %shl_ln, %empty_34" [firmware/myproject_axi.cpp:21]   --->   Operation 106 'icmp' 'icmp_ln203' <Predicate = (!icmp_ln19)> <Delay = 1.90> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 107 [1/1] (1.53ns)   --->   "%sub_ln203 = sub i13 -3009, %shl_ln" [firmware/myproject_axi.cpp:21]   --->   Operation 107 'sub' 'sub_ln203' <Predicate = (!icmp_ln19)> <Delay = 1.53> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.69> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node sub_ln203_1)   --->   "%select_ln203 = select i1 %icmp_ln203, i13 %shl_ln, i13 %empty_34" [firmware/myproject_axi.cpp:21]   --->   Operation 108 'select' 'select_ln203' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 109 [1/1] (1.53ns) (out node of the LUT)   --->   "%sub_ln203_1 = sub i13 -3009, %select_ln203" [firmware/myproject_axi.cpp:21]   --->   Operation 109 'sub' 'sub_ln203_1' <Predicate = (!icmp_ln19)> <Delay = 1.53> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.69> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 3.12>
ST_7 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node shl_ln203)   --->   "%zext_ln203 = zext i16 %select_ln603_3 to i5184" [firmware/myproject_axi.cpp:21]   --->   Operation 110 'zext' 'zext_ln203' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_7 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%select_ln203_1 = select i1 %icmp_ln203, i13 %empty_34, i13 %shl_ln" [firmware/myproject_axi.cpp:21]   --->   Operation 111 'select' 'select_ln203_1' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node shl_ln203)   --->   "%select_ln203_2 = select i1 %icmp_ln203, i13 %sub_ln203, i13 %shl_ln" [firmware/myproject_axi.cpp:21]   --->   Operation 112 'select' 'select_ln203_2' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node shl_ln203)   --->   "%zext_ln203_1 = zext i13 %select_ln203_2 to i5184" [firmware/myproject_axi.cpp:21]   --->   Operation 113 'zext' 'zext_ln203_1' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_7 : Operation 114 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%zext_ln203_2 = zext i13 %select_ln203_1 to i5184" [firmware/myproject_axi.cpp:21]   --->   Operation 114 'zext' 'zext_ln203_2' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_7 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%zext_ln203_3 = zext i13 %sub_ln203_1 to i5184" [firmware/myproject_axi.cpp:21]   --->   Operation 115 'zext' 'zext_ln203_3' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_7 : Operation 116 [1/1] (3.12ns) (out node of the LUT)   --->   "%shl_ln203 = shl i5184 %zext_ln203, %zext_ln203_1" [firmware/myproject_axi.cpp:21]   --->   Operation 116 'shl' 'shl_ln203' <Predicate = (!icmp_ln19)> <Delay = 3.12> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%shl_ln203_1 = shl i5184 -1, %zext_ln203_2" [firmware/myproject_axi.cpp:21]   --->   Operation 117 'shl' 'shl_ln203_1' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%lshr_ln203 = lshr i5184 -1, %zext_ln203_3" [firmware/myproject_axi.cpp:21]   --->   Operation 118 'lshr' 'lshr_ln203' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 119 [1/1] (2.90ns) (out node of the LUT)   --->   "%and_ln203 = and i5184 %shl_ln203_1, %lshr_ln203" [firmware/myproject_axi.cpp:21]   --->   Operation 119 'and' 'and_ln203' <Predicate = (!icmp_ln19)> <Delay = 2.90> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 3.18>
ST_8 : Operation 120 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str45)" [firmware/myproject_axi.cpp:19]   --->   Operation 120 'specregionbegin' 'tmp' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_8 : Operation 121 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [firmware/myproject_axi.cpp:20]   --->   Operation 121 'specpipeline' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_8 : Operation 122 [1/1] (0.00ns)   --->   "%in_local_V_load = load i5184* %in_local_V, align 8" [firmware/myproject_axi.cpp:21]   --->   Operation 122 'load' 'in_local_V_load' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_8 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%tmp_6 = call i5184 @llvm.part.select.i5184(i5184 %shl_ln203, i32 5183, i32 0)" [firmware/myproject_axi.cpp:21]   --->   Operation 123 'partselect' 'tmp_6' <Predicate = (!icmp_ln19 & icmp_ln203)> <Delay = 0.00>
ST_8 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%select_ln203_3 = select i1 %icmp_ln203, i5184 %tmp_6, i5184 %shl_ln203" [firmware/myproject_axi.cpp:21]   --->   Operation 124 'select' 'select_ln203_3' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%xor_ln203 = xor i5184 %and_ln203, -1" [firmware/myproject_axi.cpp:21]   --->   Operation 125 'xor' 'xor_ln203' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%and_ln203_1 = and i5184 %in_local_V_load, %xor_ln203" [firmware/myproject_axi.cpp:21]   --->   Operation 126 'and' 'and_ln203_1' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%and_ln203_2 = and i5184 %select_ln203_3, %and_ln203" [firmware/myproject_axi.cpp:21]   --->   Operation 127 'and' 'and_ln203_2' <Predicate = (!icmp_ln19)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 128 [1/1] (3.18ns) (out node of the LUT)   --->   "%in_local_V_1 = or i5184 %and_ln203_1, %and_ln203_2" [firmware/myproject_axi.cpp:21]   --->   Operation 128 'or' 'in_local_V_1' <Predicate = (!icmp_ln19)> <Delay = 3.18> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 129 [1/1] (0.00ns)   --->   "store i5184 %in_local_V_1, i5184* %in_local_V, align 8" [firmware/myproject_axi.cpp:21]   --->   Operation 129 'store' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_8 : Operation 130 [1/1] (0.00ns)   --->   "%empty_35 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str45, i32 %tmp)" [firmware/myproject_axi.cpp:23]   --->   Operation 130 'specregionend' 'empty_35' <Predicate = (!icmp_ln19)> <Delay = 0.00>
ST_8 : Operation 131 [1/1] (0.00ns)   --->   "br label %.preheader" [firmware/myproject_axi.cpp:19]   --->   Operation 131 'br' <Predicate = (!icmp_ln19)> <Delay = 0.00>

State 9 <SV = 2> <Delay = 4.32>
ST_9 : Operation 132 [17/17] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @myproject(i5184* %in_local_V)"   --->   Operation 132 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 3> <Delay = 4.32>
ST_10 : Operation 133 [16/17] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @myproject(i5184* %in_local_V)"   --->   Operation 133 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 4> <Delay = 4.32>
ST_11 : Operation 134 [15/17] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @myproject(i5184* %in_local_V)"   --->   Operation 134 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 5> <Delay = 4.32>
ST_12 : Operation 135 [14/17] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @myproject(i5184* %in_local_V)"   --->   Operation 135 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 6> <Delay = 4.32>
ST_13 : Operation 136 [13/17] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @myproject(i5184* %in_local_V)"   --->   Operation 136 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 14 <SV = 7> <Delay = 4.32>
ST_14 : Operation 137 [12/17] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @myproject(i5184* %in_local_V)"   --->   Operation 137 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 15 <SV = 8> <Delay = 4.32>
ST_15 : Operation 138 [11/17] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @myproject(i5184* %in_local_V)"   --->   Operation 138 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 16 <SV = 9> <Delay = 4.32>
ST_16 : Operation 139 [10/17] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @myproject(i5184* %in_local_V)"   --->   Operation 139 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 17 <SV = 10> <Delay = 4.32>
ST_17 : Operation 140 [9/17] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @myproject(i5184* %in_local_V)"   --->   Operation 140 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 18 <SV = 11> <Delay = 4.32>
ST_18 : Operation 141 [8/17] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @myproject(i5184* %in_local_V)"   --->   Operation 141 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 19 <SV = 12> <Delay = 4.32>
ST_19 : Operation 142 [7/17] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @myproject(i5184* %in_local_V)"   --->   Operation 142 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 20 <SV = 13> <Delay = 4.32>
ST_20 : Operation 143 [6/17] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @myproject(i5184* %in_local_V)"   --->   Operation 143 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 14> <Delay = 4.32>
ST_21 : Operation 144 [5/17] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @myproject(i5184* %in_local_V)"   --->   Operation 144 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 15> <Delay = 4.32>
ST_22 : Operation 145 [4/17] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @myproject(i5184* %in_local_V)"   --->   Operation 145 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 23 <SV = 16> <Delay = 4.32>
ST_23 : Operation 146 [3/17] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @myproject(i5184* %in_local_V)"   --->   Operation 146 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 24 <SV = 17> <Delay = 4.32>
ST_24 : Operation 147 [2/17] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @myproject(i5184* %in_local_V)"   --->   Operation 147 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 25 <SV = 18> <Delay = 3.18>
ST_25 : Operation 148 [1/17] (3.18ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @myproject(i5184* %in_local_V)"   --->   Operation 148 'call' 'call_ret' <Predicate = true> <Delay = 3.18> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_25 : Operation 149 [1/1] (0.00ns)   --->   "%out_local = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret, 0"   --->   Operation 149 'extractvalue' 'out_local' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 150 [1/1] (0.00ns)   --->   "%out_local_1 = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret, 1"   --->   Operation 150 'extractvalue' 'out_local_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 151 [1/1] (0.00ns)   --->   "%out_local_2 = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret, 2"   --->   Operation 151 'extractvalue' 'out_local_2' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 152 [1/1] (0.00ns)   --->   "%out_local_3 = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret, 3"   --->   Operation 152 'extractvalue' 'out_local_3' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 153 [1/1] (0.00ns)   --->   "%out_local_4 = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret, 4"   --->   Operation 153 'extractvalue' 'out_local_4' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 154 [1/1] (0.00ns)   --->   "%out_local_5 = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret, 5"   --->   Operation 154 'extractvalue' 'out_local_5' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 155 [1/1] (0.00ns)   --->   "%out_local_6 = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret, 6"   --->   Operation 155 'extractvalue' 'out_local_6' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 156 [1/1] (0.00ns)   --->   "%out_local_7 = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret, 7"   --->   Operation 156 'extractvalue' 'out_local_7' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 157 [1/1] (0.00ns)   --->   "%out_local_8 = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret, 8"   --->   Operation 157 'extractvalue' 'out_local_8' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 158 [1/1] (0.00ns)   --->   "%out_local_9 = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret, 9"   --->   Operation 158 'extractvalue' 'out_local_9' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 159 [1/1] (0.46ns)   --->   "br label %1" [firmware/myproject_axi.cpp:27]   --->   Operation 159 'br' <Predicate = true> <Delay = 0.46>

State 26 <SV = 19> <Delay = 3.33>
ST_26 : Operation 160 [1/1] (0.00ns)   --->   "%i2_0 = phi i4 [ 0, %0 ], [ %i_1, %hls_label_1 ]"   --->   Operation 160 'phi' 'i2_0' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 161 [1/1] (0.96ns)   --->   "%icmp_ln27 = icmp eq i4 %i2_0, -6" [firmware/myproject_axi.cpp:27]   --->   Operation 161 'icmp' 'icmp_ln27' <Predicate = true> <Delay = 0.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 162 [1/1] (0.00ns)   --->   "%empty_36 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"   --->   Operation 162 'speclooptripcount' 'empty_36' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 163 [1/1] (0.99ns)   --->   "%i_1 = add i4 %i2_0, 1" [firmware/myproject_axi.cpp:27]   --->   Operation 163 'add' 'i_1' <Predicate = true> <Delay = 0.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.69> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 164 [1/1] (0.00ns)   --->   "br i1 %icmp_ln27, label %2, label %hls_label_1" [firmware/myproject_axi.cpp:27]   --->   Operation 164 'br' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 165 [1/1] (1.79ns)   --->   "%tmp_V_3 = call i16 @_ssdm_op_Mux.ap_auto.10i16.i4(i16 %out_local, i16 %out_local_1, i16 %out_local_2, i16 %out_local_3, i16 %out_local_4, i16 %out_local_5, i16 %out_local_6, i16 %out_local_7, i16 %out_local_8, i16 %out_local_9, i4 %i2_0)" [firmware/myproject_axi.cpp:29]   --->   Operation 165 'mux' 'tmp_V_3' <Predicate = (!icmp_ln27)> <Delay = 1.79> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.79> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 166 [1/1] (0.00ns)   --->   "%p_Result_10 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %tmp_V_3, i32 15)" [firmware/myproject_axi.cpp:29]   --->   Operation 166 'bitselect' 'p_Result_10' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_26 : Operation 167 [1/1] (1.54ns)   --->   "%tmp_V = sub i16 0, %tmp_V_3" [firmware/myproject_axi.cpp:29]   --->   Operation 167 'sub' 'tmp_V' <Predicate = (!icmp_ln27)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.69> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 168 [1/1] (0.96ns)   --->   "%icmp_ln30 = icmp eq i4 %i2_0, -7" [firmware/myproject_axi.cpp:30]   --->   Operation 168 'icmp' 'icmp_ln30' <Predicate = (!icmp_ln27)> <Delay = 0.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 169 [1/1] (0.80ns)   --->   "%and_ln30 = and i1 %is_last_0, %icmp_ln30" [firmware/myproject_axi.cpp:30]   --->   Operation 169 'and' 'and_ln30' <Predicate = (!icmp_ln27)> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 20> <Delay = 3.42>
ST_27 : Operation 170 [1/1] (2.13ns)   --->   "%icmp_ln935 = icmp eq i16 %tmp_V_3, 0" [firmware/myproject_axi.cpp:29]   --->   Operation 170 'icmp' 'icmp_ln935' <Predicate = (!icmp_ln27)> <Delay = 2.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 171 [1/1] (0.62ns)   --->   "%tmp_V_4 = select i1 %p_Result_10, i16 %tmp_V, i16 %tmp_V_3" [firmware/myproject_axi.cpp:29]   --->   Operation 171 'select' 'tmp_V_4' <Predicate = (!icmp_ln27)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_27 : Operation 172 [1/1] (0.00ns)   --->   "%p_Result_s = call i16 @llvm.part.select.i16(i16 %tmp_V_4, i32 15, i32 0) nounwind" [firmware/myproject_axi.cpp:29]   --->   Operation 172 'partselect' 'p_Result_s' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_27 : Operation 173 [1/1] (0.00ns)   --->   "%p_Result_11 = call i32 @_ssdm_op_BitConcatenate.i32.i16.i16(i16 -1, i16 %p_Result_s)" [firmware/myproject_axi.cpp:29]   --->   Operation 173 'bitconcatenate' 'p_Result_11' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_27 : Operation 174 [1/1] (2.79ns)   --->   "%l = call i32 @llvm.cttz.i32(i32 %p_Result_11, i1 true) nounwind" [firmware/myproject_axi.cpp:29]   --->   Operation 174 'cttz' 'l' <Predicate = (!icmp_ln27)> <Delay = 2.79> <Core = "CTTZ">   --->   Core 64 'CTTZ' <Latency = 0> <II = 1> <Delay = 2.79> <FuncUnit> <Opcode : 'cttz'> <InPorts = 1> <OutPorts = 1>
ST_27 : Operation 175 [1/1] (0.00ns)   --->   "%trunc_ln943 = trunc i32 %l to i8" [firmware/myproject_axi.cpp:29]   --->   Operation 175 'trunc' 'trunc_ln943' <Predicate = (!icmp_ln27)> <Delay = 0.00>

State 28 <SV = 21> <Delay = 1.89>
ST_28 : Operation 176 [1/1] (1.89ns)   --->   "%sub_ln944 = sub nsw i32 16, %l" [firmware/myproject_axi.cpp:29]   --->   Operation 176 'sub' 'sub_ln944' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.69> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 177 [1/1] (0.00ns)   --->   "%trunc_ln944 = trunc i32 %sub_ln944 to i16" [firmware/myproject_axi.cpp:29]   --->   Operation 177 'trunc' 'trunc_ln944' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_28 : Operation 178 [1/1] (0.00ns)   --->   "%trunc_ln947 = trunc i32 %sub_ln944 to i5" [firmware/myproject_axi.cpp:29]   --->   Operation 178 'trunc' 'trunc_ln947' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>

State 29 <SV = 22> <Delay = 3.86>
ST_29 : Operation 179 [1/1] (1.89ns)   --->   "%lsb_index = add nsw i32 -24, %sub_ln944" [firmware/myproject_axi.cpp:29]   --->   Operation 179 'add' 'lsb_index' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.69> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 180 [1/1] (0.00ns)   --->   "%tmp_8 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %lsb_index, i32 1, i32 31)" [firmware/myproject_axi.cpp:29]   --->   Operation 180 'partselect' 'tmp_8' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_29 : Operation 181 [1/1] (1.96ns)   --->   "%icmp_ln947 = icmp sgt i31 %tmp_8, 0" [firmware/myproject_axi.cpp:29]   --->   Operation 181 'icmp' 'icmp_ln947' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 1.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 182 [1/1] (1.02ns)   --->   "%sub_ln947 = sub i5 9, %trunc_ln947" [firmware/myproject_axi.cpp:29]   --->   Operation 182 'sub' 'sub_ln947' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 1.02> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.69> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 183 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln947_1)   --->   "%zext_ln947 = zext i5 %sub_ln947 to i16" [firmware/myproject_axi.cpp:29]   --->   Operation 183 'zext' 'zext_ln947' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_29 : Operation 184 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln947_1)   --->   "%lshr_ln947 = lshr i16 -1, %zext_ln947" [firmware/myproject_axi.cpp:29]   --->   Operation 184 'lshr' 'lshr_ln947' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 185 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln947_1)   --->   "%p_Result_6 = and i16 %tmp_V_4, %lshr_ln947" [firmware/myproject_axi.cpp:29]   --->   Operation 185 'and' 'p_Result_6' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 186 [1/1] (2.18ns) (out node of the LUT)   --->   "%icmp_ln947_1 = icmp ne i16 %p_Result_6, 0" [firmware/myproject_axi.cpp:29]   --->   Operation 186 'icmp' 'icmp_ln947_1' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 2.18> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 187 [1/1] (1.54ns)   --->   "%add_ln949 = add i16 -24, %trunc_ln944" [firmware/myproject_axi.cpp:29]   --->   Operation 187 'add' 'add_ln949' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.69> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 188 [1/1] (1.96ns)   --->   "%icmp_ln958 = icmp sgt i32 %lsb_index, 0" [firmware/myproject_axi.cpp:29]   --->   Operation 188 'icmp' 'icmp_ln958' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 1.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 189 [1/1] (1.89ns)   --->   "%add_ln958 = add nsw i32 -25, %sub_ln944" [firmware/myproject_axi.cpp:29]   --->   Operation 189 'add' 'add_ln958' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.69> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 190 [1/1] (1.89ns)   --->   "%sub_ln958 = sub i32 25, %sub_ln944" [firmware/myproject_axi.cpp:29]   --->   Operation 190 'sub' 'sub_ln958' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.69> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 23> <Delay = 3.73>
ST_30 : Operation 191 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%a = and i1 %icmp_ln947, %icmp_ln947_1" [firmware/myproject_axi.cpp:29]   --->   Operation 191 'and' 'a' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 192 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%tmp_9 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %lsb_index, i32 31)" [firmware/myproject_axi.cpp:29]   --->   Operation 192 'bitselect' 'tmp_9' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_30 : Operation 193 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%xor_ln949 = xor i1 %tmp_9, true" [firmware/myproject_axi.cpp:29]   --->   Operation 193 'xor' 'xor_ln949' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 194 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%p_Result_5 = call i1 @_ssdm_op_BitSelect.i1.i16.i16(i16 %tmp_V_4, i16 %add_ln949)" [firmware/myproject_axi.cpp:29]   --->   Operation 194 'bitselect' 'p_Result_5' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_30 : Operation 195 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%and_ln949 = and i1 %p_Result_5, %xor_ln949" [firmware/myproject_axi.cpp:29]   --->   Operation 195 'and' 'and_ln949' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 196 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%or_ln949 = or i1 %and_ln949, %a" [firmware/myproject_axi.cpp:29]   --->   Operation 196 'or' 'or_ln949' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 197 [1/1] (0.80ns) (out node of the LUT)   --->   "%or_ln = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 0, i1 %or_ln949)" [firmware/myproject_axi.cpp:29]   --->   Operation 197 'bitconcatenate' 'or_ln' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.80>
ST_30 : Operation 198 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%m = zext i16 %tmp_V_4 to i64" [firmware/myproject_axi.cpp:29]   --->   Operation 198 'zext' 'm' <Predicate = (!icmp_ln27 & !icmp_ln958 & !icmp_ln935)> <Delay = 0.00>
ST_30 : Operation 199 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%zext_ln957_1 = zext i16 %tmp_V_4 to i32" [firmware/myproject_axi.cpp:29]   --->   Operation 199 'zext' 'zext_ln957_1' <Predicate = (!icmp_ln27 & icmp_ln958 & !icmp_ln935)> <Delay = 0.00>
ST_30 : Operation 200 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%lshr_ln958 = lshr i32 %zext_ln957_1, %add_ln958" [firmware/myproject_axi.cpp:29]   --->   Operation 200 'lshr' 'lshr_ln958' <Predicate = (!icmp_ln27 & icmp_ln958 & !icmp_ln935)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 201 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%zext_ln958 = zext i32 %lshr_ln958 to i64" [firmware/myproject_axi.cpp:29]   --->   Operation 201 'zext' 'zext_ln958' <Predicate = (!icmp_ln27 & icmp_ln958 & !icmp_ln935)> <Delay = 0.00>
ST_30 : Operation 202 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%zext_ln958_1 = zext i32 %sub_ln958 to i64" [firmware/myproject_axi.cpp:29]   --->   Operation 202 'zext' 'zext_ln958_1' <Predicate = (!icmp_ln27 & !icmp_ln958 & !icmp_ln935)> <Delay = 0.00>
ST_30 : Operation 203 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%shl_ln958 = shl i64 %m, %zext_ln958_1" [firmware/myproject_axi.cpp:29]   --->   Operation 203 'shl' 'shl_ln958' <Predicate = (!icmp_ln27 & !icmp_ln958 & !icmp_ln935)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 204 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%m_1 = select i1 %icmp_ln958, i64 %zext_ln958, i64 %shl_ln958" [firmware/myproject_axi.cpp:29]   --->   Operation 204 'select' 'm_1' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_30 : Operation 205 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%zext_ln961 = zext i32 %or_ln to i64" [firmware/myproject_axi.cpp:29]   --->   Operation 205 'zext' 'zext_ln961' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_30 : Operation 206 [1/1] (2.93ns) (out node of the LUT)   --->   "%m_2 = add i64 %m_1, %zext_ln961" [firmware/myproject_axi.cpp:29]   --->   Operation 206 'add' 'm_2' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 2.93> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.69> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 207 [1/1] (0.00ns)   --->   "%m_5 = call i63 @_ssdm_op_PartSelect.i63.i64.i32.i32(i64 %m_2, i32 1, i32 63)" [firmware/myproject_axi.cpp:29]   --->   Operation 207 'partselect' 'm_5' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_30 : Operation 208 [1/1] (0.00ns)   --->   "%tmp_10 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %m_2, i32 25)" [firmware/myproject_axi.cpp:29]   --->   Operation 208 'bitselect' 'tmp_10' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>

State 31 <SV = 24> <Delay = 4.11>
ST_31 : Operation 209 [1/1] (0.00ns)   --->   "%m_6 = zext i63 %m_5 to i64" [firmware/myproject_axi.cpp:29]   --->   Operation 209 'zext' 'm_6' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_31 : Operation 210 [1/1] (0.44ns)   --->   "%select_ln964 = select i1 %tmp_10, i8 127, i8 126" [firmware/myproject_axi.cpp:29]   --->   Operation 210 'select' 'select_ln964' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.44> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_31 : Operation 211 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln964 = sub i8 8, %trunc_ln943" [firmware/myproject_axi.cpp:29]   --->   Operation 211 'sub' 'sub_ln964' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.48> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_31 : Operation 212 [1/1] (2.96ns) (root node of TernaryAdder)   --->   "%add_ln964 = add i8 %select_ln964, %sub_ln964" [firmware/myproject_axi.cpp:29]   --->   Operation 212 'add' 'add_ln964' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 2.96> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.48> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_31 : Operation 213 [1/1] (0.00ns)   --->   "%tmp_2 = call i9 @_ssdm_op_BitConcatenate.i9.i1.i8(i1 %p_Result_10, i8 %add_ln964)" [firmware/myproject_axi.cpp:29]   --->   Operation 213 'bitconcatenate' 'tmp_2' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_31 : Operation 214 [1/1] (0.00ns)   --->   "%p_Result_12 = call i64 @_ssdm_op_PartSet.i64.i64.i9.i32.i32(i64 %m_6, i9 %tmp_2, i32 23, i32 31)" [firmware/myproject_axi.cpp:29]   --->   Operation 214 'partset' 'p_Result_12' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_31 : Operation 215 [1/1] (0.00ns)   --->   "%trunc_ln738 = trunc i64 %p_Result_12 to i32" [firmware/myproject_axi.cpp:29]   --->   Operation 215 'trunc' 'trunc_ln738' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_31 : Operation 216 [1/1] (0.00ns)   --->   "%bitcast_ln739 = bitcast i32 %trunc_ln738 to float" [firmware/myproject_axi.cpp:29]   --->   Operation 216 'bitcast' 'bitcast_ln739' <Predicate = (!icmp_ln27 & !icmp_ln935)> <Delay = 0.00>
ST_31 : Operation 217 [1/1] (0.70ns)   --->   "%select_ln935 = select i1 %icmp_ln935, float 0.000000e+00, float %bitcast_ln739" [firmware/myproject_axi.cpp:29]   --->   Operation 217 'select' 'select_ln935' <Predicate = (!icmp_ln27)> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_31 : Operation 218 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.floatP.i1P(float* %out_data, i1* %out_last_V, float %select_ln935, i1 %and_ln30)" [firmware/myproject_axi.cpp:5]   --->   Operation 218 'write' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 32 <SV = 25> <Delay = 0.00>
ST_32 : Operation 219 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str56)" [firmware/myproject_axi.cpp:27]   --->   Operation 219 'specregionbegin' 'tmp_1' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_32 : Operation 220 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [firmware/myproject_axi.cpp:28]   --->   Operation 220 'specpipeline' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_32 : Operation 221 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.floatP.i1P(float* %out_data, i1* %out_last_V, float %select_ln935, i1 %and_ln30)" [firmware/myproject_axi.cpp:5]   --->   Operation 221 'write' <Predicate = (!icmp_ln27)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_32 : Operation 222 [1/1] (0.00ns)   --->   "%empty_37 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str56, i32 %tmp_1)" [firmware/myproject_axi.cpp:31]   --->   Operation 222 'specregionend' 'empty_37' <Predicate = (!icmp_ln27)> <Delay = 0.00>
ST_32 : Operation 223 [1/1] (0.00ns)   --->   "br label %1" [firmware/myproject_axi.cpp:27]   --->   Operation 223 'br' <Predicate = (!icmp_ln27)> <Delay = 0.00>

State 33 <SV = 20> <Delay = 0.00>
ST_33 : Operation 224 [1/1] (0.00ns)   --->   "ret void" [firmware/myproject_axi.cpp:32]   --->   Operation 224 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 0.625ns.

 <State 1>: 0.466ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('is_last') with incoming values : ('is_last', firmware/myproject_axi.cpp:22) [16]  (0.466 ns)

 <State 2>: 3.16ns
The critical path consists of the following:
	axis read on port 'in_data' (firmware/myproject_axi.cpp:4) [25]  (0 ns)
	'fpext' operation ('d', firmware/myproject_axi.cpp:21) [28]  (3.16 ns)

 <State 3>: 3.16ns
The critical path consists of the following:
	'fpext' operation ('d', firmware/myproject_axi.cpp:21) [28]  (3.16 ns)

 <State 4>: 3.96ns
The critical path consists of the following:
	'sub' operation ('F2', firmware/myproject_axi.cpp:21) [40]  (1.55 ns)
	'icmp' operation ('icmp_ln581', firmware/myproject_axi.cpp:21) [41]  (1.82 ns)
	'select' operation ('sh_amt', firmware/myproject_axi.cpp:21) [44]  (0.59 ns)

 <State 5>: 4.1ns
The critical path consists of the following:
	'sub' operation ('man.V', firmware/myproject_axi.cpp:21) [37]  (2.42 ns)
	'select' operation ('man.V', firmware/myproject_axi.cpp:21) [38]  (0.865 ns)
	'select' operation ('select_ln603_1', firmware/myproject_axi.cpp:21) [72]  (0.813 ns)

 <State 6>: 4.19ns
The critical path consists of the following:
	'ashr' operation ('ashr_ln586', firmware/myproject_axi.cpp:21) [52]  (0 ns)
	'select' operation ('select_ln603', firmware/myproject_axi.cpp:21) [70]  (3.57 ns)
	'select' operation ('select_ln603_2', firmware/myproject_axi.cpp:21) [74]  (0 ns)
	'select' operation ('select_ln603_3', firmware/myproject_axi.cpp:21) [76]  (0.627 ns)

 <State 7>: 3.12ns
The critical path consists of the following:
	'shl' operation ('shl_ln203', firmware/myproject_axi.cpp:21) [90]  (3.12 ns)

 <State 8>: 3.18ns
The critical path consists of the following:
	'load' operation ('in_local_V_load', firmware/myproject_axi.cpp:21) on local variable 'in_local.V', firmware/myproject_axi.cpp:16 [77]  (0 ns)
	'and' operation ('and_ln203_1', firmware/myproject_axi.cpp:21) [97]  (0 ns)
	'or' operation ('in_local.V', firmware/myproject_axi.cpp:21) [99]  (3.18 ns)

 <State 9>: 4.32ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [105]  (4.32 ns)

 <State 10>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [105]  (4.33 ns)

 <State 11>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [105]  (4.33 ns)

 <State 12>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [105]  (4.33 ns)

 <State 13>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [105]  (4.33 ns)

 <State 14>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [105]  (4.33 ns)

 <State 15>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [105]  (4.33 ns)

 <State 16>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [105]  (4.33 ns)

 <State 17>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [105]  (4.33 ns)

 <State 18>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [105]  (4.33 ns)

 <State 19>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [105]  (4.33 ns)

 <State 20>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [105]  (4.33 ns)

 <State 21>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [105]  (4.33 ns)

 <State 22>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [105]  (4.33 ns)

 <State 23>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [105]  (4.33 ns)

 <State 24>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [105]  (4.33 ns)

 <State 25>: 3.19ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'myproject' [105]  (3.19 ns)

 <State 26>: 3.34ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', firmware/myproject_axi.cpp:27) [118]  (0 ns)
	'mux' operation ('tmp.V', firmware/myproject_axi.cpp:29) [126]  (1.79 ns)
	'sub' operation ('tmp.V', firmware/myproject_axi.cpp:29) [129]  (1.54 ns)

 <State 27>: 3.43ns
The critical path consists of the following:
	'select' operation ('tmp.V', firmware/myproject_axi.cpp:29) [130]  (0.627 ns)
	'cttz' operation ('l', firmware/myproject_axi.cpp:29) [133]  (2.8 ns)

 <State 28>: 1.9ns
The critical path consists of the following:
	'sub' operation ('sub_ln944', firmware/myproject_axi.cpp:29) [134]  (1.9 ns)

 <State 29>: 3.86ns
The critical path consists of the following:
	'add' operation ('lsb_index', firmware/myproject_axi.cpp:29) [136]  (1.9 ns)
	'icmp' operation ('icmp_ln958', firmware/myproject_axi.cpp:29) [155]  (1.97 ns)

 <State 30>: 3.74ns
The critical path consists of the following:
	'and' operation ('a', firmware/myproject_axi.cpp:29) [145]  (0 ns)
	'or' operation ('or_ln949', firmware/myproject_axi.cpp:29) [151]  (0 ns)
	'add' operation ('m', firmware/myproject_axi.cpp:29) [164]  (2.94 ns)
	blocking operation 0.8 ns on control path)

 <State 31>: 4.12ns
The critical path consists of the following:
	'select' operation ('select_ln964', firmware/myproject_axi.cpp:29) [168]  (0.448 ns)
	'add' operation ('add_ln964', firmware/myproject_axi.cpp:29) [171]  (2.97 ns)
	'select' operation ('select_ln935', firmware/myproject_axi.cpp:29) [176]  (0.705 ns)

 <State 32>: 0ns
The critical path consists of the following:

 <State 33>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
