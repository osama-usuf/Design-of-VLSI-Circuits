

================================================================
== Vivado HLS Report for 'myproject'
================================================================
* Date:           Sun Oct 23 21:50:54 2022

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        myproject_prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z045-ffg900-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   5.00|     4.326|        0.62|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |   16|   16|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 17


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 17
* Pipeline : 1
  Pipeline-0 : II = 1, D = 17, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.32>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%input1_V_read = call i5184 @_ssdm_op_Read.ap_vld.i5184P(i5184* %input1_V)"   --->   Operation 18 'read' 'input1_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [10/10] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @dense_latency.0.0.0.0.0.0.0.0.0.0.0.1(i5184 %input1_V_read)"   --->   Operation 19 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 4.32>
ST_2 : Operation 20 [9/10] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @dense_latency.0.0.0.0.0.0.0.0.0.0.0.1(i5184 %input1_V_read)"   --->   Operation 20 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 4.32>
ST_3 : Operation 21 [8/10] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @dense_latency.0.0.0.0.0.0.0.0.0.0.0.1(i5184 %input1_V_read)"   --->   Operation 21 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 4.32>
ST_4 : Operation 22 [7/10] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @dense_latency.0.0.0.0.0.0.0.0.0.0.0.1(i5184 %input1_V_read)"   --->   Operation 22 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 4.32>
ST_5 : Operation 23 [6/10] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @dense_latency.0.0.0.0.0.0.0.0.0.0.0.1(i5184 %input1_V_read)"   --->   Operation 23 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 4.32>
ST_6 : Operation 24 [5/10] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @dense_latency.0.0.0.0.0.0.0.0.0.0.0.1(i5184 %input1_V_read)"   --->   Operation 24 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 4.32>
ST_7 : Operation 25 [4/10] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @dense_latency.0.0.0.0.0.0.0.0.0.0.0.1(i5184 %input1_V_read)"   --->   Operation 25 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 7> <Delay = 4.32>
ST_8 : Operation 26 [3/10] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @dense_latency.0.0.0.0.0.0.0.0.0.0.0.1(i5184 %input1_V_read)"   --->   Operation 26 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 8> <Delay = 4.32>
ST_9 : Operation 27 [2/10] (4.32ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @dense_latency.0.0.0.0.0.0.0.0.0.0.0.1(i5184 %input1_V_read)"   --->   Operation 27 'call' 'call_ret' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 9> <Delay = 3.18>
ST_10 : Operation 28 [1/10] (3.18ns)   --->   "%call_ret = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @dense_latency.0.0.0.0.0.0.0.0.0.0.0.1(i5184 %input1_V_read)"   --->   Operation 28 'call' 'call_ret' <Predicate = true> <Delay = 3.18> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 29 [1/1] (0.00ns)   --->   "%layer2_out_0_V = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret, 0"   --->   Operation 29 'extractvalue' 'layer2_out_0_V' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 30 [1/1] (0.00ns)   --->   "%layer2_out_1_V = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret, 1"   --->   Operation 30 'extractvalue' 'layer2_out_1_V' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 31 [1/1] (0.00ns)   --->   "%layer2_out_2_V = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret, 2"   --->   Operation 31 'extractvalue' 'layer2_out_2_V' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 32 [1/1] (0.00ns)   --->   "%layer2_out_3_V = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret, 3"   --->   Operation 32 'extractvalue' 'layer2_out_3_V' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 33 [1/1] (0.00ns)   --->   "%layer2_out_4_V = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret, 4"   --->   Operation 33 'extractvalue' 'layer2_out_4_V' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 34 [1/1] (0.00ns)   --->   "%layer2_out_5_V = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret, 5"   --->   Operation 34 'extractvalue' 'layer2_out_5_V' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 35 [1/1] (0.00ns)   --->   "%layer2_out_6_V = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret, 6"   --->   Operation 35 'extractvalue' 'layer2_out_6_V' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 36 [1/1] (0.00ns)   --->   "%layer2_out_7_V = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret, 7"   --->   Operation 36 'extractvalue' 'layer2_out_7_V' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 37 [1/1] (0.00ns)   --->   "%layer2_out_8_V = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret, 8"   --->   Operation 37 'extractvalue' 'layer2_out_8_V' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 38 [1/1] (0.00ns)   --->   "%layer2_out_9_V = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret, 9"   --->   Operation 38 'extractvalue' 'layer2_out_9_V' <Predicate = true> <Delay = 0.00>

State 11 <SV = 10> <Delay = 2.74>
ST_11 : Operation 39 [1/1] (2.74ns)   --->   "%call_ret1 = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @"relu<ap_fixed,ap_fixed<16,8,5,3,0>,ReLU_config3>"(i16 %layer2_out_0_V, i16 %layer2_out_1_V, i16 %layer2_out_2_V, i16 %layer2_out_3_V, i16 %layer2_out_4_V, i16 %layer2_out_5_V, i16 %layer2_out_6_V, i16 %layer2_out_7_V, i16 %layer2_out_8_V, i16 %layer2_out_9_V)" [firmware/myproject.cpp:64]   --->   Operation 39 'call' 'call_ret1' <Predicate = true> <Delay = 2.74> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 40 [1/1] (0.00ns)   --->   "%layer3_out_0_V = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret1, 0" [firmware/myproject.cpp:64]   --->   Operation 40 'extractvalue' 'layer3_out_0_V' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 41 [1/1] (0.00ns)   --->   "%layer3_out_1_V = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret1, 1" [firmware/myproject.cpp:64]   --->   Operation 41 'extractvalue' 'layer3_out_1_V' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 42 [1/1] (0.00ns)   --->   "%layer3_out_2_V = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret1, 2" [firmware/myproject.cpp:64]   --->   Operation 42 'extractvalue' 'layer3_out_2_V' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 43 [1/1] (0.00ns)   --->   "%layer3_out_3_V = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret1, 3" [firmware/myproject.cpp:64]   --->   Operation 43 'extractvalue' 'layer3_out_3_V' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 44 [1/1] (0.00ns)   --->   "%layer3_out_4_V = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret1, 4" [firmware/myproject.cpp:64]   --->   Operation 44 'extractvalue' 'layer3_out_4_V' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 45 [1/1] (0.00ns)   --->   "%layer3_out_5_V = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret1, 5" [firmware/myproject.cpp:64]   --->   Operation 45 'extractvalue' 'layer3_out_5_V' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 46 [1/1] (0.00ns)   --->   "%layer3_out_6_V = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret1, 6" [firmware/myproject.cpp:64]   --->   Operation 46 'extractvalue' 'layer3_out_6_V' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 47 [1/1] (0.00ns)   --->   "%layer3_out_7_V = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret1, 7" [firmware/myproject.cpp:64]   --->   Operation 47 'extractvalue' 'layer3_out_7_V' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 48 [1/1] (0.00ns)   --->   "%layer3_out_8_V = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret1, 8" [firmware/myproject.cpp:64]   --->   Operation 48 'extractvalue' 'layer3_out_8_V' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 49 [1/1] (0.00ns)   --->   "%layer3_out_9_V = extractvalue { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret1, 9" [firmware/myproject.cpp:64]   --->   Operation 49 'extractvalue' 'layer3_out_9_V' <Predicate = true> <Delay = 0.00>

State 12 <SV = 11> <Delay = 2.78>
ST_12 : Operation 50 [6/6] (2.78ns)   --->   "%call_ret2 = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @dense_latency.0.0.0.0.0.0.0.0.0.0.0(i16 %layer3_out_0_V, i16 %layer3_out_1_V, i16 %layer3_out_2_V, i16 %layer3_out_3_V, i16 %layer3_out_4_V, i16 %layer3_out_5_V, i16 %layer3_out_6_V, i16 %layer3_out_7_V, i16 %layer3_out_8_V, i16 %layer3_out_9_V)" [firmware/nnet_utils/nnet_dense.h:46->firmware/myproject.cpp:66]   --->   Operation 50 'call' 'call_ret2' <Predicate = true> <Delay = 2.78> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 12> <Delay = 4.32>
ST_13 : Operation 51 [5/6] (4.32ns)   --->   "%call_ret2 = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @dense_latency.0.0.0.0.0.0.0.0.0.0.0(i16 %layer3_out_0_V, i16 %layer3_out_1_V, i16 %layer3_out_2_V, i16 %layer3_out_3_V, i16 %layer3_out_4_V, i16 %layer3_out_5_V, i16 %layer3_out_6_V, i16 %layer3_out_7_V, i16 %layer3_out_8_V, i16 %layer3_out_9_V)" [firmware/nnet_utils/nnet_dense.h:46->firmware/myproject.cpp:66]   --->   Operation 51 'call' 'call_ret2' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 14 <SV = 13> <Delay = 4.32>
ST_14 : Operation 52 [4/6] (4.32ns)   --->   "%call_ret2 = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @dense_latency.0.0.0.0.0.0.0.0.0.0.0(i16 %layer3_out_0_V, i16 %layer3_out_1_V, i16 %layer3_out_2_V, i16 %layer3_out_3_V, i16 %layer3_out_4_V, i16 %layer3_out_5_V, i16 %layer3_out_6_V, i16 %layer3_out_7_V, i16 %layer3_out_8_V, i16 %layer3_out_9_V)" [firmware/nnet_utils/nnet_dense.h:46->firmware/myproject.cpp:66]   --->   Operation 52 'call' 'call_ret2' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 15 <SV = 14> <Delay = 4.32>
ST_15 : Operation 53 [3/6] (4.32ns)   --->   "%call_ret2 = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @dense_latency.0.0.0.0.0.0.0.0.0.0.0(i16 %layer3_out_0_V, i16 %layer3_out_1_V, i16 %layer3_out_2_V, i16 %layer3_out_3_V, i16 %layer3_out_4_V, i16 %layer3_out_5_V, i16 %layer3_out_6_V, i16 %layer3_out_7_V, i16 %layer3_out_8_V, i16 %layer3_out_9_V)" [firmware/nnet_utils/nnet_dense.h:46->firmware/myproject.cpp:66]   --->   Operation 53 'call' 'call_ret2' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 16 <SV = 15> <Delay = 4.32>
ST_16 : Operation 54 [2/6] (4.32ns)   --->   "%call_ret2 = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @dense_latency.0.0.0.0.0.0.0.0.0.0.0(i16 %layer3_out_0_V, i16 %layer3_out_1_V, i16 %layer3_out_2_V, i16 %layer3_out_3_V, i16 %layer3_out_4_V, i16 %layer3_out_5_V, i16 %layer3_out_6_V, i16 %layer3_out_7_V, i16 %layer3_out_8_V, i16 %layer3_out_9_V)" [firmware/nnet_utils/nnet_dense.h:46->firmware/myproject.cpp:66]   --->   Operation 54 'call' 'call_ret2' <Predicate = true> <Delay = 4.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 17 <SV = 16> <Delay = 3.18>
ST_17 : Operation 55 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i5184* %input1_V, [7 x i8]* @p_str6, i32 0, i32 0, [1 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str5, [1 x i8]* @p_str5, [1 x i8]* @p_str5, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str5, [1 x i8]* @p_str5) nounwind"   --->   Operation 55 'specinterface' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 56 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [7 x i8]* @p_str6, i32 0, i32 0, [1 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str5, [1 x i8]* @p_str5, [1 x i8]* @p_str5, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str5, [1 x i8]* @p_str5)"   --->   Operation 56 'specinterface' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 57 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str5) nounwind" [firmware/myproject.cpp:35]   --->   Operation 57 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 58 [1/6] (3.18ns)   --->   "%call_ret2 = call fastcc { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } @dense_latency.0.0.0.0.0.0.0.0.0.0.0(i16 %layer3_out_0_V, i16 %layer3_out_1_V, i16 %layer3_out_2_V, i16 %layer3_out_3_V, i16 %layer3_out_4_V, i16 %layer3_out_5_V, i16 %layer3_out_6_V, i16 %layer3_out_7_V, i16 %layer3_out_8_V, i16 %layer3_out_9_V)" [firmware/nnet_utils/nnet_dense.h:46->firmware/myproject.cpp:66]   --->   Operation 58 'call' 'call_ret2' <Predicate = true> <Delay = 3.18> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_17 : Operation 59 [1/1] (0.00ns)   --->   "ret { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 } %call_ret2" [firmware/nnet_utils/nnet_dense.h:46->firmware/myproject.cpp:66]   --->   Operation 59 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 0.625ns.

 <State 1>: 4.32ns
The critical path consists of the following:
	wire read on port 'input1_V' [5]  (0 ns)
	'call' operation ('call_ret') to 'dense_latency.0.0.0.0.0.0.0.0.0.0.0.1' [6]  (4.32 ns)

 <State 2>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'dense_latency.0.0.0.0.0.0.0.0.0.0.0.1' [6]  (4.33 ns)

 <State 3>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'dense_latency.0.0.0.0.0.0.0.0.0.0.0.1' [6]  (4.33 ns)

 <State 4>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'dense_latency.0.0.0.0.0.0.0.0.0.0.0.1' [6]  (4.33 ns)

 <State 5>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'dense_latency.0.0.0.0.0.0.0.0.0.0.0.1' [6]  (4.33 ns)

 <State 6>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'dense_latency.0.0.0.0.0.0.0.0.0.0.0.1' [6]  (4.33 ns)

 <State 7>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'dense_latency.0.0.0.0.0.0.0.0.0.0.0.1' [6]  (4.33 ns)

 <State 8>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'dense_latency.0.0.0.0.0.0.0.0.0.0.0.1' [6]  (4.33 ns)

 <State 9>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'dense_latency.0.0.0.0.0.0.0.0.0.0.0.1' [6]  (4.33 ns)

 <State 10>: 3.19ns
The critical path consists of the following:
	'call' operation ('call_ret') to 'dense_latency.0.0.0.0.0.0.0.0.0.0.0.1' [6]  (3.19 ns)

 <State 11>: 2.75ns
The critical path consists of the following:
	'call' operation ('call_ret1', firmware/myproject.cpp:64) to 'relu<ap_fixed,ap_fixed<16,8,5,3,0>,ReLU_config3>' [17]  (2.75 ns)

 <State 12>: 2.78ns
The critical path consists of the following:
	'call' operation ('call_ret2', firmware/nnet_utils/nnet_dense.h:46->firmware/myproject.cpp:66) to 'dense_latency.0.0.0.0.0.0.0.0.0.0.0' [28]  (2.78 ns)

 <State 13>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret2', firmware/nnet_utils/nnet_dense.h:46->firmware/myproject.cpp:66) to 'dense_latency.0.0.0.0.0.0.0.0.0.0.0' [28]  (4.33 ns)

 <State 14>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret2', firmware/nnet_utils/nnet_dense.h:46->firmware/myproject.cpp:66) to 'dense_latency.0.0.0.0.0.0.0.0.0.0.0' [28]  (4.33 ns)

 <State 15>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret2', firmware/nnet_utils/nnet_dense.h:46->firmware/myproject.cpp:66) to 'dense_latency.0.0.0.0.0.0.0.0.0.0.0' [28]  (4.33 ns)

 <State 16>: 4.33ns
The critical path consists of the following:
	'call' operation ('call_ret2', firmware/nnet_utils/nnet_dense.h:46->firmware/myproject.cpp:66) to 'dense_latency.0.0.0.0.0.0.0.0.0.0.0' [28]  (4.33 ns)

 <State 17>: 3.19ns
The critical path consists of the following:
	'call' operation ('call_ret2', firmware/nnet_utils/nnet_dense.h:46->firmware/myproject.cpp:66) to 'dense_latency.0.0.0.0.0.0.0.0.0.0.0' [28]  (3.19 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
